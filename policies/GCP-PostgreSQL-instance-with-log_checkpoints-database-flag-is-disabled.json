{
  "policyUpi": "PC-GCP-SQL-532",
  "policyId": "6058e452-648f-44d3-a6c0-4e3616f11210",
  "policyType": "config",
  "cloudType": "gcp",
  "severity": "low",
  "name": "GCP PostgreSQL instance with log_checkpoints database flag is disabled",
  "description": "This policy identifies PostgreSQL instances in which log_checkpoints database flag is not set. Enabling the log_checkpoints database flag would enable logging of checkpoints and restart points to the server log.",
  "rule.criteria": "56f48aa7-73c7-4b85-bb71-2b4d063864d5",
  "searchModel.query": "config from cloud.resource where cloud.type = 'gcp' AND api.name = 'gcloud-sql-instances-list' AND json.rule = \"databaseVersion contains POSTGRES and (settings.databaseFlags[?(@.name=='log_checkpoints')] does not exist or settings.databaseFlags[?(@.name=='log_checkpoints')].value equals off)\"",
  "recommendation": "1. Login to GCP Console\n2. Navigate to SQL\n3. Select the PostgreSQL instance for which you want to enable the database flag from the list\n4. Click 'Edit'\nNOTE: If the instance is stopped, You need to START instance first to edit the configurations, then Click on EDIT.\n5. Go to the 'Flags' section under 'Configuration options'\n6. Click 'Add item', choose the flag 'log_checkpoints' from the drop-down menu and set the value to 'on'\nOR\nIf 'log_checkpoints' database flag is already set to 'off', from the drop-down menu set the value to 'on'\n7. Click on 'Save'",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "CIS v1.1.0 (GCP)",
    "NIST 800-53 Rev 5",
    "NIST 800-53 Rev4"
  ]
}