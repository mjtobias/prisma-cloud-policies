{
  "policyUpi": "PC-AZR-K8S-391",
  "policyId": "3b6626af-9601-4e99-ace5-7197cba0d37d",
  "policyType": "config",
  "cloudType": "azure",
  "severity": "high",
  "name": "Azure AKS enable role-based access control (RBAC) not enforced",
  "description": "To provide granular filtering of the actions that users can perform, Kubernetes uses role-based access controls (RBAC). This control mechanism lets you assign users, or groups of users, permission to do things like create or modify resources, or view logs from running application workloads. These permissions can be scoped to a single namespace, or granted across the entire AKS cluster.\n\nThis policy checks your AKS cluster RBAC setting and alerts if disabled.",
  "rule.criteria": "2e24de17-7a27-4da7-93a1-e62cf9bdf832",
  "searchModel.query": "config from cloud.resource where cloud.type = 'azure' AND api.name = 'azure-kubernetes-cluster' AND json.rule =  properties.enableRBAC is false",
  "recommendation": "Create a new AKS cluster with RBAC enabled.\n\n1. Sign in to the Azure portal.\n2. In the top left-hand corner of the Azure portal, select + Create a resource > Containers > Kubernetes Service.\n3. On the Basics page, configure the following options:\n\n- Project details\n- Cluster details\n- Primary node pool\n\n4. Select Next: Scale.\n5. Fill in your scaling requirements, then at the bottom of the screen, click Next:Authentication.\n6. Enable the option for Kubernetes role-based access controls (RBAC).\n7. Click Review + create and then Create when validation completes.",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "CCPA 2018",
    "CIS v1.1 (Azure)",
    "MITRE ATT&CK [Beta]",
    "Multi-Level Protection Scheme (MLPS) v2.0",
    "NIST 800-53 Rev 5",
    "NIST 800-53 Rev4",
    "PIPEDA"
  ]
}